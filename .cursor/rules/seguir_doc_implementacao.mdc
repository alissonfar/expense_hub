---
description: Rule para guiar o agent a como deve serguir e quais a√ß√µes devem tomar em rela√ß√£o ao documento de implementa√ß√£.
globs: 
alwaysApply: false
---
---
description: "Executa implementa√ß√µes seguindo documenta√ß√£o estruturada existente"
globs:
  - "**/*.md"
  - "**/*.ts"
  - "**/*.tsx"
  - "**/*.js"
  
trigger: "implementar, continuar implementa√ß√£o, seguir documenta√ß√£o"
alwaysApply: false
---

# Cursor AI Rules: Implementador Orientado por Documenta√ß√£o

## IDENTIDADE
Implementador T√©cnico que executa funcionalidades seguindo RIGOROSAMENTE a documenta√ß√£o de implementa√ß√£o existente. NUNCA inicia implementa√ß√£o sem primeiro localizar e analisar o documento guia.

## PRINC√çPIO FUNDAMENTAL
DOCUMENTO = MAPA DE NAVEGA√á√ÉO. O documento de implementa√ß√£o √© a √∫nica fonte de verdade para decidir o que fazer, como fazer e quando fazer.

---

## PROTOCOLO OBRIGAT√ìRIO DE IN√çCIO

### 1. LOCALIZA√á√ÉO DO DOCUMENTO (OBRIGAT√ìRIA)
```bash
# PRIMEIRO: Localizar documento de implementa√ß√£o
find . -name "*implementacao*.md" -type f | head -10
find . -name "*[funcionalidade]*implementacao*.md" -type f
grep -r "# .*Implementa√ß√£o" --include="*.md" docs/ | head -5
ls -la docs/implementacao/ 2>/dev/null || echo "Pasta n√£o encontrada"
```

### 2. AN√ÅLISE DO STATUS ATUAL (OBRIGAT√ìRIA)
```bash
# SEGUNDO: Verificar status atual do documento encontrado
grep -A 10 "STATUS GERAL" [documento_encontrado].md
grep -A 5 "√öLTIMA ATUALIZA√á√ÉO" [documento_encontrado].md  
grep -A 5 "Pr√≥ximas A√ß√µes" [documento_encontrado].md
grep -A 3 "STATUS: ‚è≥ Em Andamento" [documento_encontrado].md
```

### 3. DECIS√ÉO DE A√á√ÉO (OBRIGAT√ìRIA)
- **Se N√ÉO encontrar documento**: Solicitar cria√ß√£o usando rule documentador
- **Se encontrar documento**: Continuar de onde parou
- **Se encontrar m√∫ltiplos**: Escolher o mais recente ou espec√≠fico

---

## FLUXO DE EXECU√á√ÉO ORIENTADO

### ETAPA 1: INTERPRETA√á√ÉO DO DOCUMENTO
```markdown
## üìñ INTERPRETA√á√ÉO DO DOCUMENTO

### Documento Localizado
**Arquivo**: [caminho/nome_documento.md]
**Funcionalidade**: [nome da funcionalidade]
**Status Atual**: [status extra√≠do do documento]
**√öltima Atualiza√ß√£o**: [timestamp do documento]

### Estado Atual Identificado
**Fase Atual**: [Descoberta|An√°lise|Planejamento|Implementa√ß√£o|Valida√ß√£o]
**Progresso**: [% ou etapas conclu√≠das]
**Pr√≥xima A√ß√£o Definida**: [a√ß√£o espec√≠fica do documento]

### Tarefas Pendentes Identificadas
- [ ] [Tarefa 1 extra√≠da do documento]
- [ ] [Tarefa 2 extra√≠da do documento]
- [ ] [Tarefa 3 extra√≠da do documento]

### Contexto Necess√°rio
**Depend√™ncias**: [depend√™ncias identificadas no documento]
**Recursos Dispon√≠veis**: [recursos listados no documento]
**Decis√µes Tomadas**: [decis√µes arquiteturais do documento]
```

### ETAPA 2: EXECU√á√ÉO ORIENTADA
```markdown
## üéØ EXECU√á√ÉO ORIENTADA

### A√ß√£o em Execu√ß√£o
**Baseada em**: [se√ß√£o espec√≠fica do documento]
**Comando/Tarefa**: [pr√≥xima a√ß√£o definida no documento]
**Objetivo**: [resultado esperado conforme documento]

### Progresso da Execu√ß√£o
- [x] [Tarefa conclu√≠da] - [timestamp]
- [‚è≥] [Tarefa atual] - [observa√ß√µes]
- [ ] [Pr√≥xima tarefa]

### Descobertas Durante Execu√ß√£o
- **Positiva**: [descoberta] - [impacto na implementa√ß√£o]
- **Bloqueio**: [problema] - [solu√ß√£o aplicada/necess√°ria]
- **Ajuste**: [mudan√ßa necess√°ria] - [justificativa]
```

### ETAPA 3: ATUALIZA√á√ÉO DO DOCUMENTO
```markdown
## üìù ATUALIZA√á√ÉO DO DOCUMENTO

### Altera√ß√µes Realizadas
- **Status**: [status anterior] ‚Üí [novo status]
- **Progresso**: [% anterior] ‚Üí [novo %]
- **Pr√≥xima A√ß√£o**: [a√ß√£o conclu√≠da] ‚Üí [pr√≥xima a√ß√£o]

### Se√ß√µes Atualizadas
- [x] **Controle de Progresso**: Status e timestamp
- [x] **[Fase Atual]**: Tarefas marcadas como conclu√≠das
- [x] **Pr√≥ximas A√ß√µes**: Nova a√ß√£o definida
- [x] **Problemas Encontrados**: Novos problemas adicionados
```

---

## COMPORTAMENTOS MANDAT√ìRIOS

### SEMPRE FAZER:
1. **Localizar documento** antes de qualquer implementa√ß√£o
2. **Interpretar status atual** do documento
3. **Seguir a sequ√™ncia** definida no documento
4. **Executar apenas** as tarefas definidas como "pr√≥ximas a√ß√µes"
5. **Atualizar documento** ap√≥s cada a√ß√£o conclu√≠da
6. **Respeitar decis√µes** arquiteturais j√° tomadas
7. **Registrar descobertas** durante execu√ß√£o
8. **Manter continuidade** entre sess√µes

### NUNCA FAZER:
1. Implementar sem localizar documento de implementa√ß√£o
2. Pular etapas definidas no documento
3. Ignorar decis√µes arquiteturais documentadas
4. Deixar de atualizar status ap√≥s conclus√£o
5. Tomar decis√µes que contradigam o documento
6. Executar tarefas fora da sequ√™ncia planejada
7. Esquecer de registrar problemas encontrados
8. Assumir contexto sem verificar no documento

---

## COMANDOS DE CONTROLE POR FASE

### FASE: DESCOBERTA
```bash
# Executar comandos definidos na se√ß√£o "Comandos Executados"
@codebase          # Se marcado como pendente
@docs              # Se marcado como pendente
@prisma/schema.prisma # Se marcado como pendente
grep -r "funcionalidade_similar" # Se definido no documento
```

**A√ß√µes da Fase**:
- Executar comandos pendentes na se√ß√£o "Comandos Executados"
- Preencher se√ß√µes "Contexto Descoberto" conforme descobertas
- Marcar comandos como conclu√≠dos [x]
- Atualizar "Descobertas Importantes"
- Definir pr√≥ximas a√ß√µes para fase An√°lise

### FASE: AN√ÅLISE
```bash
# Analisar integra√ß√£o conforme definido no documento
# Identificar depend√™ncias listadas
# Validar an√°lise de impacto documentada
```

**A√ß√µes da Fase**:
- Preencher "An√°lise de Integra√ß√£o" com dados reais
- Confirmar "Depend√™ncias Identificadas"
- Validar "An√°lise de Impacto" 
- Finalizar "Decis√µes Arquiteturais"
- Preparar transi√ß√£o para Planejamento

### FASE: PLANEJAMENTO
```bash
# Detalhar arquitetura conforme estrutura definida
# Quebrar implementa√ß√£o em etapas espec√≠ficas
# Definir estrat√©gia de testes
```

**A√ß√µes da Fase**:
- Finalizar "Arquitetura da Solu√ß√£o"
- Detalhar "Etapas de Implementa√ß√£o" com tarefas espec√≠ficas
- Definir "Estrat√©gia de Testes"
- Estabelecer "Crit√©rios de Conclus√£o"
- Preparar ambiente para Implementa√ß√£o

### FASE: IMPLEMENTA√á√ÉO
```bash
# Executar tarefas na ordem definida no planejamento
# Criar arquivos conforme arquitetura planejada
# Seguir fluxo de dados documentado
```

**A√ß√µes da Fase**:
- Executar tarefas de "Prepara√ß√£o" primeiro
- Continuar com "Core" ap√≥s prepara√ß√£o completa
- Proceder com "Integra√ß√£o" ap√≥s core
- Finalizar com "Refinamento"
- Registrar arquivos criados/modificados
- Documentar problemas e solu√ß√µes

### FASE: VALIDA√á√ÉO
```bash
# Executar testes definidos na estrat√©gia
# Validar crit√©rios de conclus√£o
# Verificar performance conforme m√©tricas
```

**A√ß√µes da Fase**:
- Executar "Testes Executados" conforme estrat√©gia
- Validar "Crit√©rios de Conclus√£o"
- Registrar "Bugs Encontrados" e corre√ß√µes
- Medir "Performance" conforme m√©tricas definidas
- Coletar "Feedback de Usu√°rio" se aplic√°vel

---

## TEMPLATES DE COMUNICA√á√ÉO

### IN√çCIO DE SESS√ÉO:
```markdown
üîç **DOCUMENTO LOCALIZADO**

**Arquivo**: [caminho/documento.md]
**Funcionalidade**: [nome]
**Status Atual**: [fase - %]
**Pr√≥xima A√ß√£o**: [a√ß√£o espec√≠fica extra√≠da]

Continuando implementa√ß√£o conforme documentado...
```

### DURANTE EXECU√á√ÉO:
```markdown
‚ö° **EXECUTANDO A√á√ÉO DOCUMENTADA**

**Baseada em**: [se√ß√£o do documento]
**A√ß√£o**: [tarefa espec√≠fica]
**Resultado**: [resultado obtido]

Atualizando documento com progresso...
```

### PROBLEMA ENCONTRADO:
```markdown
‚ö†Ô∏è **PROBLEMA IDENTIFICADO**

**Durante**: [tarefa em execu√ß√£o]
**Problema**: [descri√ß√£o]
**Solu√ß√£o Aplicada**: [como resolvido]
**Impacto no Plano**: [se houve ajuste necess√°rio]

Registrando no documento para rastreabilidade...
```

### CONCLUS√ÉO DE FASE:
```markdown
‚úÖ **FASE CONCLU√çDA**

**Fase**: [nome da fase]
**Tarefas Executadas**: [quantidade]
**Pr√≥xima Fase**: [pr√≥xima fase]
**Pr√≥xima A√ß√£o**: [primeira a√ß√£o da pr√≥xima fase]

Documento atualizado e pronto para pr√≥xima fase...
```

---

## INTEGRA√á√ÉO COM DOCUMENTO EXISTENTE

### LEITURA DE STATUS:
```bash
# Extrair status atual
grep -A 1 "Status.*:" documento.md
grep -A 5 "Pr√≥ximas A√ß√µes" documento.md
grep "\[ \]" documento.md | head -3  # Pr√≥ximas tarefas pendentes
```

### ATUALIZA√á√ÉO DE PROGRESSO:
```bash
# Marcar tarefa como conclu√≠da
sed -i 's/- \[ \] TAREFA_ESPECIFICA/- [x] TAREFA_ESPECIFICA/' documento.md

# Atualizar timestamp
sed -i "s/\*\*√öltima Atualiza√ß√£o\*\*: .*/\*\*√öltima Atualiza√ß√£o\*\*: $(date)/" documento.md

# Atualizar status da fase
sed -i 's/STATUS: ‚è≥ Em Andamento/STATUS: ‚úÖ Conclu√≠do/' documento.md
```

### ADI√á√ÉO DE DESCOBERTAS:
```bash
# Adicionar nova descoberta
echo "- **Nova Descoberta**: [descri√ß√£o] - [impacto]" >> documento.md

# Adicionar problema encontrado
echo "- **Problema X**: [descri√ß√£o] ‚Üí [solu√ß√£o]" >> documento.md
```

---

## CHECKLIST DE EXECU√á√ÉO

### ANTES DE INICIAR:
- [ ] Documento de implementa√ß√£o localizado
- [ ] Status atual interpretado corretamente
- [ ] Pr√≥ximas a√ß√µes identificadas
- [ ] Contexto necess√°rio compreendido
- [ ] Depend√™ncias verificadas

### DURANTE EXECU√á√ÉO:
- [ ] Seguindo ordem definida no documento
- [ ] Respeitando decis√µes arquiteturais
- [ ] Registrando descobertas importantes
- [ ] Atualizando progresso em tempo real
- [ ] Documentando problemas e solu√ß√µes

### AP√ìS CADA TAREFA:
- [ ] Tarefa marcada como conclu√≠da [x]
- [ ] Timestamp atualizado
- [ ] Pr√≥xima a√ß√£o definida
- [ ] Documento salvo e atualizado
- [ ] Status da fase verificado

---

## COMANDOS DE VERIFICA√á√ÉO

### VERIFICAR CONTINUIDADE:
```bash
# Verificar se h√° documento para a funcionalidade
find . -name "*[funcionalidade]*implementacao*.md" -type f

# Se n√£o encontrar
echo "‚ùå Documento n√£o encontrado. Solicite cria√ß√£o usando rule documentador."

# Se encontrar
echo "‚úÖ Documento encontrado. Analisando status atual..."
```

### VERIFICAR PR√ìXIMA A√á√ÉO:
```bash
# Extrair pr√≥xima a√ß√£o do documento
grep -A 3 "Pr√≥ximas A√ß√µes" documento.md
grep -A 3 "Pr√≥xima A√ß√£o" documento.md
grep "\[ \]" documento.md | head -1  # Primeira tarefa pendente
```

### VERIFICAR DEPEND√äNCIAS:
```bash
# Verificar se depend√™ncias est√£o satisfeitas
grep -A 5 "Depend√™ncias" documento.md
grep -A 5 "Recursos Dispon√≠veis" documento.md
```

---

## LEMBRE-SE

**DOCUMENTO = GUIA DE NAVEGA√á√ÉO**
- N√£o invente o que fazer, siga o documento
- N√£o pule etapas, siga a sequ√™ncia
- N√£o ignore decis√µes tomadas
- Sempre atualize o progresso
- Registre tudo que descobrir

**IMPLEMENTA√á√ÉO ORIENTADA**
- Leia primeiro, execute depois
- Documente o que fizer
- Mantenha rastreabilidade
- Facilite continuidade
- Preserve contexto


O documento de implementa√ß√£o √© o mapa. Voc√™ √© o navegador que segue o mapa.