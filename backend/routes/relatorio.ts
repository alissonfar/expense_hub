import { Router } from 'express';
import {
  getSaldos,
  getDashboard,
  getPendencias,
  getTransacoes,
  getCategorias
} from '../controllers/relatorioController';
import {
  saldosQuerySchema,
  dashboardQuerySchema,
  pendenciasQuerySchema,
  transacoesQuerySchema,
  categoriasQuerySchema
} from '../schemas/relatorio';
import {
  requireAuth,
  validateQuery
} from '../middleware/auth';

// =============================================
// CONFIGURA√á√ÉO DAS ROTAS DE RELAT√ìRIOS
// =============================================

const router = Router();

// =============================================
// ROTA DE INFORMA√á√ïES (DEVE VIR ANTES DE /:id)
// =============================================

/**
 * GET /api/relatorios/info
 * Retorna informa√ß√µes sobre as rotas de relat√≥rios
 */
router.get('/info', (req, res) => {
  res.json({
    message: 'üìä Sistema de Relat√≥rios - Personal Expense Hub',
    description: 'Sistema completo de relat√≥rios para an√°lise de gastos, saldos e tend√™ncias financeiras',
    version: '1.0.0',
    status: 'Operacional',
    baseUrl: '/api/relatorios',
    features: [
      'üìà Dashboard com m√©tricas principais',
      'üí∞ Relat√≥rios de saldos por pessoa',
      '‚ö†Ô∏è An√°lise de pend√™ncias e vencimentos',
      'üìã Relat√≥rios completos de transa√ß√µes',
      'üè∑Ô∏è An√°lise por categorias/tags',
      'üìä Dados preparados para gr√°ficos',
      'üîç Filtros avan√ßados e agrupamentos',
      'üìë Pagina√ß√£o e ordena√ß√£o flex√≠vel'
    ],
    businessRules: [
      'Apenas usu√°rios autenticados podem acessar relat√≥rios',
      'Todos os relat√≥rios incluem apenas transa√ß√µes confirmadas',
      'Datas s√£o filtradas no formato YYYY-MM-DD',
      'Valores monet√°rios s√£o retornados com 2 casas decimais',
      'Estat√≠sticas s√£o calculadas em tempo real'
    ],
    endpoints: {
      dashboard: {
        method: 'GET',
        path: '/api/relatorios/dashboard',
        description: 'Dashboard com resumo executivo e m√©tricas principais',
        auth: 'Requerida',
        query: {
          periodo: '7_dias|30_dias|90_dias|1_ano|personalizado (padr√£o: 30_dias)',
          data_inicio: 'YYYY-MM-DD (obrigat√≥rio se per√≠odo = personalizado)',
          data_fim: 'YYYY-MM-DD (obrigat√≥rio se per√≠odo = personalizado)',
          incluir_graficos: 'boolean (padr√£o: true) - Dados para gr√°ficos',
          incluir_comparativo: 'boolean (padr√£o: true) - Comparativo com per√≠odo anterior',
          apenas_confirmadas: 'boolean (padr√£o: true) - Apenas transa√ß√µes confirmadas'
        },
        response: {
          resumo: 'M√©tricas principais (gastos, receitas, saldo, pend√™ncias)',
          comparativo: 'Varia√ß√µes percentuais vs per√≠odo anterior (opcional)',
          graficos: 'Dados formatados para gr√°ficos (opcional)',
          periodo: 'Informa√ß√µes do per√≠odo analisado'
        }
      },
      saldos: {
        method: 'GET',
        path: '/api/relatorios/saldos',
        description: 'Relat√≥rio detalhado de saldos por pessoa',
        auth: 'Requerida',
        query: {
          pessoa_id: 'number (opcional) - Filtrar por pessoa espec√≠fica',
          apenas_ativos: 'boolean (padr√£o: true) - Apenas pessoas ativas',
          data_inicio: 'YYYY-MM-DD (opcional) - Per√≠odo inicial',
          data_fim: 'YYYY-MM-DD (opcional) - Per√≠odo final',
          status_saldo: 'DEVEDOR|CREDOR|QUITADO|TODOS (padr√£o: TODOS)',
          valor_minimo: 'number (opcional) - Valor m√≠nimo do saldo',
          ordenar_por: 'nome|saldo|total_deve|total_pago (padr√£o: nome)',
          ordem: 'asc|desc (padr√£o: asc)',
          incluir_detalhes: 'boolean (padr√£o: false) - Detalhes das transa√ß√µes'
        },
        response: {
          saldos: 'Array com saldo de cada pessoa',
          estatisticas: 'Resumo geral dos saldos',
          filtros: 'Filtros aplicados na consulta'
        }
      },
      pendencias: {
        method: 'GET',
        path: '/api/relatorios/pendencias',
        description: 'Relat√≥rio de pend√™ncias e vencimentos',
        auth: 'Requerida',
        query: {
          pessoa_id: 'number (opcional) - Filtrar por pessoa',
          apenas_ativos: 'boolean (padr√£o: true) - Apenas pessoas ativas',
          valor_minimo: 'number (padr√£o: 0.01) - Valor m√≠nimo da pend√™ncia',
          vencimento_ate: 'YYYY-MM-DD (opcional) - Vencimentos at√© esta data',
          data_inicio: 'YYYY-MM-DD (opcional) - Per√≠odo inicial',
          data_fim: 'YYYY-MM-DD (opcional) - Per√≠odo final',
          urgencia: 'VENCIDA|VENCE_HOJE|VENCE_SEMANA|VENCE_MES|TODAS (padr√£o: TODAS)',
          ordenar_por: 'valor_devido|data_transacao|pessoa_nome|dias_atraso (padr√£o: valor_devido)',
          ordem: 'asc|desc (padr√£o: desc)',
          agrupar_por: 'pessoa|urgencia|tag|nenhum (padr√£o: pessoa)',
          incluir_historico_pagamentos: 'boolean (padr√£o: false)'
        },
        response: {
          pendencias: 'Array com pend√™ncias detalhadas',
          agrupamento: 'Dados agrupados conforme solicitado (opcional)',
          estatisticas: 'Resumo das pend√™ncias',
          filtros: 'Filtros aplicados'
        }
      },
      transacoes: {
        method: 'GET',
        path: '/api/relatorios/transacoes',
        description: 'Relat√≥rio completo de transa√ß√µes com filtros avan√ßados',
        auth: 'Requerida',
        query: {
          tipo: 'GASTO|RECEITA|TODOS (padr√£o: TODOS)',
          status_pagamento: 'PENDENTE|PAGO_PARCIAL|PAGO_TOTAL|TODOS (padr√£o: TODOS)',
          data_inicio: 'YYYY-MM-DD (opcional)',
          data_fim: 'YYYY-MM-DD (opcional)',
          proprietario_id: 'number (opcional) - Filtrar por propriet√°rio',
          participante_id: 'number (opcional) - Filtrar por participante',
          tag_id: 'number (opcional) - Filtrar por tag',
          valor_min: 'number (opcional) - Valor m√≠nimo',
          valor_max: 'number (opcional) - Valor m√°ximo',
          eh_parcelado: 'boolean (opcional) - Apenas parceladas',
          grupo_parcela: 'UUID (opcional) - Grupo espec√≠fico de parcelas',
          page: 'number (padr√£o: 1) - P√°gina',
          limit: 'number (padr√£o: 20, m√°x: 100) - Itens por p√°gina',
          ordenar_por: 'data_transacao|valor_total|descricao|criado_em (padr√£o: data_transacao)',
          ordem: 'asc|desc (padr√£o: desc)',
          agrupar_por: 'mes|tag|pessoa|tipo|nenhum (padr√£o: nenhum)',
          incluir_participantes: 'boolean (padr√£o: true)',
          incluir_tags: 'boolean (padr√£o: true)',
          incluir_pagamentos: 'boolean (padr√£o: false)'
        },
        response: {
          transacoes: 'Array de transa√ß√µes formatadas',
          agrupamento: 'Dados agrupados (opcional)',
          estatisticas: 'M√©tricas das transa√ß√µes',
          pagination: 'Informa√ß√µes de pagina√ß√£o',
          filtros: 'Filtros aplicados'
        }
      },
      categorias: {
        method: 'GET',
        path: '/api/relatorios/categorias',
        description: 'An√°lise detalhada por categorias/tags',
        auth: 'Requerida',
        query: {
          data_inicio: 'YYYY-MM-DD (opcional)',
          data_fim: 'YYYY-MM-DD (opcional)',
          tipo: 'GASTO|RECEITA|TODOS (padr√£o: GASTO)',
          tag_ids: 'string (opcional) - IDs separados por v√≠rgula',
          metrica: 'valor_total|quantidade|valor_medio (padr√£o: valor_total)',
          ordenar_por: 'valor|quantidade|nome_tag (padr√£o: valor)',
          ordem: 'asc|desc (padr√£o: desc)',
          limite: 'number (padr√£o: 10, m√°x: 50) - N√∫mero de categorias',
          incluir_sem_categoria: 'boolean (padr√£o: true)'
        },
        response: {
          categorias: 'Array com an√°lise por categoria',
          estatisticas: 'Resumo geral das categorias',
          graficos: 'Dados preparados para gr√°ficos',
          filtros: 'Filtros aplicados'
        }
      }
    },
    examples: {
      dashboard_30_dias: '/api/relatorios/dashboard?periodo=30_dias&incluir_graficos=true',
      saldos_devedores: '/api/relatorios/saldos?status_saldo=DEVEDOR&ordenar_por=saldo&ordem=desc',
      pendencias_vencidas: '/api/relatorios/pendencias?urgencia=VENCIDA&agrupar_por=pessoa',
      transacoes_janeiro: '/api/relatorios/transacoes?data_inicio=2024-01-01&data_fim=2024-01-31&tipo=GASTO',
      categorias_top10: '/api/relatorios/categorias?limite=10&tipo=GASTO&ordenar_por=valor'
    }
  });
});

// =============================================
// RELAT√ìRIOS PRINCIPAIS
// =============================================

/**
 * GET /api/relatorios/dashboard
 * Dashboard com m√©tricas principais do sistema
 */
router.get('/dashboard', 
  requireAuth,
  validateQuery(dashboardQuerySchema),
  getDashboard
);

/**
 * GET /api/relatorios/saldos
 * Relat√≥rio de saldos por pessoa
 */
router.get('/saldos',
  requireAuth,
  validateQuery(saldosQuerySchema),
  getSaldos
);

/**
 * GET /api/relatorios/pendencias
 * Relat√≥rio de pend√™ncias e vencimentos
 */
router.get('/pendencias',
  requireAuth,
  validateQuery(pendenciasQuerySchema),
  getPendencias
);

/**
 * GET /api/relatorios/transacoes
 * Relat√≥rio completo de transa√ß√µes
 */
router.get('/transacoes',
  requireAuth,
  validateQuery(transacoesQuerySchema),
  getTransacoes
);

/**
 * GET /api/relatorios/categorias
 * An√°lise por categorias/tags
 */
router.get('/categorias',
  requireAuth,
  validateQuery(categoriasQuerySchema),
  getCategorias
);

export default router; 