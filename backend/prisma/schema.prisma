generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// Modelo central que representa cada workspace/tenant
model Hub {
  id           Int           @id @default(autoincrement())
  nome         String        @unique @db.VarChar(100)
  ativo        Boolean       @default(true)
  createdAt    DateTime      @default(now()) @db.Timestamptz(6)
  updatedAt    DateTime      @updatedAt @db.Timestamptz(6)
  codigoAcesso String?       @unique @db.VarChar(20)
  membros      membros_hub[]
  pagamentos   pagamentos[]
  tags         tags[]
  transacoes   transacoes[]

  @@index([ativo], map: "idx_hubs_ativo")
  @@index([codigoAcesso], map: "idx_hubs_codigo_acesso")
}

/// Tabela de junção que define papel e política de cada pessoa em cada Hub
model membros_hub {
  hubId            Int
  pessoaId         Int
  role             Role              @default(COLABORADOR)
  dataAccessPolicy DataAccessPolicy?
  ativo            Boolean           @default(true)
  joinedAt         DateTime          @default(now()) @db.Timestamptz(6)
  hub              Hub               @relation(fields: [hubId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  pessoa           pessoas           @relation(fields: [pessoaId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([hubId, pessoaId])
  @@index([hubId], map: "idx_membro_hub_hub")
  @@index([pessoaId], map: "idx_membro_hub_pessoa")
  @@index([ativo], map: "idx_membro_hub_ativo")
  @@index([role], map: "idx_membro_hub_role")
}

/// Modelo pessoas modificado para multi-tenancy
model pessoas {
  id                                             Int                       @id @default(autoincrement())
  nome                                           String                    @db.VarChar(100)
  email                                          String                    @unique @db.VarChar(150)
  telefone                                       String?                   @db.VarChar(20)
  senha_hash                                     String?                   @db.VarChar(255)
  ehAdministrador                                Boolean                   @default(false)
  is_god                                         Boolean                   @default(false)
  ativo                                          Boolean                   @default(true)
  data_cadastro                                  DateTime                  @default(now()) @db.Timestamptz(6)
  atualizado_em                                  DateTime                  @updatedAt @db.Timestamptz(6)
  conviteAtivo                                   Boolean                   @default(false)
  conviteExpiraEm                                DateTime?                 @db.Timestamptz(6)
  conviteToken                                   String?                   @unique @db.VarChar(255)
  hubs                                           membros_hub[]
  pagamentos_pagamentos_pessoa_idTopessoas       pagamentos[]              @relation("pagamentos_pessoa_idTopessoas")
  pagamentos_pagamentos_registrado_porTopessoas  pagamentos[]              @relation("pagamentos_registrado_porTopessoas")
  tags                                           tags[]
  transacao_participantes                        transacao_participantes[]
  transacoes_transacoes_criado_porTopessoas      transacoes[]              @relation("transacoes_criado_porTopessoas")
  transacoes_transacoes_proprietario_idTopessoas transacoes[]              @relation("transacoes_proprietario_idTopessoas")

  @@index([ativo], map: "idx_pessoas_ativo")
  @@index([email], map: "idx_pessoas_email")
  @@index([ehAdministrador], map: "idx_pessoas_eh_administrador")
  @@index([is_god], map: "idx_pessoas_is_god")
  @@index([conviteAtivo], map: "idx_pessoas_convite_ativo")
  @@index([conviteToken], map: "idx_pessoas_convite_token")
}

/// Transações modificadas para multi-tenancy
model transacoes {
  id                                          Int                       @id @default(autoincrement())
  ativo                                       Boolean                   @default(true)
  tipo                                        String                    @db.VarChar(10)
  proprietario_id                             Int
  descricao                                   String                    @db.VarChar(200)
  local                                       String?                   @db.VarChar(150)
  valor_total                                 Decimal                   @db.Decimal(10, 2)
  data_transacao                              DateTime                  @db.Date
  data_criacao                                DateTime                  @default(now()) @db.Timestamptz(6)
  eh_parcelado                                Boolean                   @default(false)
  parcela_atual                               Int                       @default(1)
  total_parcelas                              Int                       @default(1)
  valor_parcela                               Decimal                   @db.Decimal(10, 2)
  grupo_parcela                               String?                   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  observacoes                                 String?
  confirmado                                  Boolean                   @default(true)
  status_pagamento                            String                    @default("PENDENTE") @db.VarChar(15)
  criado_por                                  Int
  atualizado_em                               DateTime                  @updatedAt @db.Timestamptz(6)
  hubId                                       Int
  data_vencimento                             DateTime?                 @db.Date
  forma_pagamento                             String?                   @db.VarChar(15)
  pagamento_transacoes                        pagamento_transacoes[]
  pagamentos_excedente                        pagamentos[]              @relation("PagamentoReceita")
  transacao_participantes                     transacao_participantes[]
  transacao_tags                              transacao_tags[]
  pessoas_transacoes_criado_porTopessoas      pessoas                   @relation("transacoes_criado_porTopessoas", fields: [criado_por], references: [id], onDelete: NoAction, onUpdate: NoAction)
  hub                                         Hub                       @relation(fields: [hubId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pessoas_transacoes_proprietario_idTopessoas pessoas                   @relation("transacoes_proprietario_idTopessoas", fields: [proprietario_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([ativo], map: "idx_transacoes_ativo")
  @@index([hubId], map: "idx_transacoes_hub")
  @@index([criado_por], map: "idx_transacoes_criado_por")
  @@index([data_transacao], map: "idx_transacoes_data")
  @@index([data_vencimento], map: "idx_transacoes_data_vencimento")
  @@index([forma_pagamento], map: "idx_transacoes_forma_pagamento")
  @@index([grupo_parcela], map: "idx_transacoes_grupo_parcela")
  @@index([proprietario_id], map: "idx_transacoes_proprietario")
  @@index([status_pagamento], map: "idx_transacoes_status")
  @@index([tipo], map: "idx_transacoes_tipo")
  @@index([hubId, ativo], map: "idx_transacoes_hub_ativo")
  @@index([hubId, data_vencimento], map: "idx_transacoes_hub_vencimento")
  @@index([hubId, forma_pagamento], map: "idx_transacoes_hub_forma")
  @@index([data_vencimento, status_pagamento], map: "idx_transacoes_vencimento_status")
  @@index([hubId, tipo, data_vencimento], map: "idx_transacoes_hub_tipo_vencimento")
  @@index([hubId, forma_pagamento, status_pagamento], map: "idx_transacoes_hub_forma_status")
  @@index([hubId, tipo, forma_pagamento], map: "idx_transacoes_hub_tipo_forma")
  @@index([data_vencimento, tipo], map: "idx_transacoes_vencimento_tipo")
  @@index([forma_pagamento, tipo], map: "idx_transacoes_forma_tipo")
}

/// Tags modificadas para multi-tenancy
model tags {
  id             Int              @id @default(autoincrement())
  nome           String           @db.VarChar(50)
  cor            String?          @default("#6B7280") @db.VarChar(7)
  icone          String?          @db.VarChar(10)
  ativo          Boolean          @default(true)
  criado_por     Int
  criado_em      DateTime         @default(now()) @db.Timestamptz(6)
  hubId          Int
  pessoas        pessoas          @relation(fields: [criado_por], references: [id], onDelete: NoAction, onUpdate: NoAction)
  hub            Hub              @relation(fields: [hubId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transacao_tags transacao_tags[]

  @@unique([hubId, nome], map: "unique_tag_nome_per_hub")
  @@index([ativo], map: "idx_tags_ativo")
  @@index([hubId], map: "idx_tags_hub")
  @@index([criado_por], map: "idx_tags_criado_por")
  @@index([nome], map: "idx_tags_nome")
  @@index([hubId, ativo], map: "idx_tags_hub_ativo")
}

/// Pagamentos modificados para multi-tenancy
model pagamentos {
  id                                         Int                    @id @default(autoincrement())
  ativo                                      Boolean                @default(true)
  pessoa_id                                  Int
  valor_total                                Decimal                @db.Decimal(10, 2)
  valor_excedente                            Decimal?               @default(0) @db.Decimal(10, 2)
  data_pagamento                             DateTime               @db.Date
  forma_pagamento                            String?                @default("PIX") @db.VarChar(15)
  observacoes                                String?
  processar_excedente                        Boolean?               @default(true)
  receita_excedente_id                       Int?
  registrado_por                             Int
  criado_em                                  DateTime               @default(now()) @db.Timestamptz(6)
  atualizado_em                              DateTime               @updatedAt @db.Timestamptz(6)
  hubId                                      Int
  pagamento_transacoes                       pagamento_transacoes[]
  hub                                        Hub                    @relation(fields: [hubId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pessoas_pagamentos_pessoa_idTopessoas      pessoas                @relation("pagamentos_pessoa_idTopessoas", fields: [pessoa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  receita_excedente                          transacoes?            @relation("PagamentoReceita", fields: [receita_excedente_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  pessoas_pagamentos_registrado_porTopessoas pessoas                @relation("pagamentos_registrado_porTopessoas", fields: [registrado_por], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([ativo], map: "idx_pagamentos_ativo")
  @@index([hubId], map: "idx_pagamentos_hub")
  @@index([registrado_por], map: "idx_pagamentos_registrado_por")
  @@index([data_pagamento], map: "idx_pagamentos_data")
  @@index([pessoa_id], map: "idx_pagamentos_pessoa")
  @@index([forma_pagamento], map: "idx_pagamentos_forma")
  @@index([pessoa_id, data_pagamento], map: "idx_pagamentos_pessoa_data")
  @@index([hubId, ativo], map: "idx_pagamentos_hub_ativo")
}

/// Nova tabela para detalhamento de pagamentos compostos
model pagamento_transacoes {
  id             Int        @id @default(autoincrement())
  pagamento_id   Int
  transacao_id   Int
  valor_aplicado Decimal    @db.Decimal(10, 2)
  criado_em      DateTime?  @default(now()) @db.Timestamptz(6)
  pagamentos     pagamentos @relation(fields: [pagamento_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transacoes     transacoes @relation(fields: [transacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([pagamento_id, transacao_id])
  @@index([pagamento_id], map: "idx_pagamento_transacoes_pagamento")
  @@index([transacao_id], map: "idx_pagamento_transacoes_transacao")
  @@index([valor_aplicado], map: "idx_pagamento_transacoes_valor")
  @@index([transacao_id, pagamento_id], map: "idx_pagamento_transacoes_lookup")
}

/// Nova tabela para configurações do sistema
model configuracoes_sistema {
  id            Int       @id @default(autoincrement())
  chave         String    @unique @db.VarChar(50)
  valor         String
  descricao     String?
  criado_em     DateTime? @default(now()) @db.Timestamptz(6)
  atualizado_em DateTime? @default(now()) @db.Timestamptz(6)
}

model transacao_participantes {
  id              Int        @id @default(autoincrement())
  transacao_id    Int
  pessoa_id       Int
  valor_devido    Decimal?   @default(0) @db.Decimal(10, 2)
  valor_recebido  Decimal?   @default(0) @db.Decimal(10, 2)
  eh_proprietario Boolean?   @default(false)
  valor_pago      Decimal?   @default(0) @db.Decimal(10, 2)
  criado_em       DateTime?  @default(now()) @db.Timestamptz(6)
  atualizado_em   DateTime?  @default(now()) @db.Timestamptz(6)
  pessoas         pessoas    @relation(fields: [pessoa_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transacoes      transacoes @relation(fields: [transacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([transacao_id, pessoa_id], map: "participante_transacao_unico")
  @@index([pessoa_id], map: "idx_participantes_pessoa")
  @@index([eh_proprietario], map: "idx_participantes_proprietario")
  @@index([transacao_id], map: "idx_participantes_transacao")
}

model transacao_tags {
  transacao_id Int
  tag_id       Int
  tags         tags       @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  transacoes   transacoes @relation(fields: [transacao_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([transacao_id, tag_id])
  @@index([tag_id], map: "idx_transacao_tags_tag")
  @@index([transacao_id], map: "idx_transacao_tags_transacao")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model pagamentos_backup {
  id              Int?
  transacao_id    Int?
  pessoa_id       Int?
  valor_pago      Decimal?  @db.Decimal(10, 2)
  data_pagamento  DateTime? @db.Date
  forma_pagamento String?   @db.VarChar(15)
  observacoes     String?
  registrado_por  Int?
  criado_em       DateTime? @db.Timestamptz(6)

  @@ignore
}

enum Role {
  PROPRIETARIO
  ADMINISTRADOR
  COLABORADOR
  VISUALIZADOR
}

enum DataAccessPolicy {
  GLOBAL
  INDIVIDUAL
}

/// Tabela para logs do sistema (Modo Deus)
model system_logs {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now()) @db.Timestamptz(6)
  level       String   @db.VarChar(10) // 'INFO', 'WARN', 'ERROR', 'DEBUG'
  category    String   @db.VarChar(50) // 'EMAIL', 'AUTH', 'DATABASE', 'API'
  message     String   @db.Text
  details     Json?    // Dados adicionais estruturados
  user_id     Int?     @db.Integer
  ip_address  String?  @db.VarChar(45)
  user_agent  String?  @db.Text
  hub_id      Int?     @db.Integer
  
  @@index([timestamp], map: "idx_system_logs_timestamp")
  @@index([level], map: "idx_system_logs_level")
  @@index([category], map: "idx_system_logs_category")
  @@index([user_id], map: "idx_system_logs_user")
  @@index([hub_id], map: "idx_system_logs_hub")
}

/// Tabela para métricas do sistema (Modo Deus)
model system_metrics {
  id           Int      @id @default(autoincrement())
  timestamp    DateTime @default(now()) @db.Timestamptz(6)
  metric_name  String   @db.VarChar(100)
  metric_value Decimal  @db.Decimal(10, 2)
  metadata     Json?
  
  @@index([timestamp], map: "idx_system_metrics_timestamp")
  @@index([metric_name], map: "idx_system_metrics_name")
}
